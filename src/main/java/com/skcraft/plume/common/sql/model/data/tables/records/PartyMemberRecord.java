/**
 * This class is generated by jOOQ
 */
package com.skcraft.plume.common.sql.model.data.tables.records;


import com.skcraft.plume.common.sql.model.data.tables.PartyMember;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartyMemberRecord extends UpdatableRecordImpl<PartyMemberRecord> implements Record3<String, Integer, String> {

	private static final long serialVersionUID = 245052861;

	/**
	 * Setter for <code>data.party_member.party_name</code>.
	 */
	public void setPartyName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>data.party_member.party_name</code>.
	 */
	public String getPartyName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>data.party_member.user_id</code>.
	 */
	public void setUserId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>data.party_member.user_id</code>.
	 */
	public Integer getUserId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>data.party_member.rank</code>.
	 */
	public void setRank(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>data.party_member.rank</code>.
	 */
	public String getRank() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, Integer> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, Integer, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, Integer, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return PartyMember.PARTY_MEMBER.PARTY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return PartyMember.PARTY_MEMBER.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return PartyMember.PARTY_MEMBER.RANK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getPartyName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getRank();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PartyMemberRecord value1(String value) {
		setPartyName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PartyMemberRecord value2(Integer value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PartyMemberRecord value3(String value) {
		setRank(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PartyMemberRecord values(String value1, Integer value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PartyMemberRecord
	 */
	public PartyMemberRecord() {
		super(PartyMember.PARTY_MEMBER);
	}

	/**
	 * Create a detached, initialised PartyMemberRecord
	 */
	public PartyMemberRecord(String partyName, Integer userId, String rank) {
		super(PartyMember.PARTY_MEMBER);

		setValue(0, partyName);
		setValue(1, userId);
		setValue(2, rank);
	}
}
