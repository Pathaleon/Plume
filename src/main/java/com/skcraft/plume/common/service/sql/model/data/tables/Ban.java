/**
 * This class is generated by jOOQ
 */
package com.skcraft.plume.common.service.sql.model.data.tables;


import com.skcraft.plume.common.service.sql.model.data.Data;
import com.skcraft.plume.common.service.sql.model.data.Keys;
import com.skcraft.plume.common.service.sql.model.data.tables.records.BanRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ban extends TableImpl<BanRecord> {

	private static final long serialVersionUID = 269992977;

	/**
	 * The reference instance of <code>data.ban</code>
	 */
	public static final Ban BAN = new Ban();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BanRecord> getRecordType() {
		return BanRecord.class;
	}

	/**
	 * The column <code>data.ban.id</code>.
	 */
	public final TableField<BanRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>data.ban.user_id</code>.
	 */
	public final TableField<BanRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>data.ban.issue_time</code>.
	 */
	public final TableField<BanRecord, Timestamp> ISSUE_TIME = createField("issue_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>data.ban.issue_by</code>.
	 */
	public final TableField<BanRecord, Integer> ISSUE_BY = createField("issue_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>data.ban.server</code>.
	 */
	public final TableField<BanRecord, String> SERVER = createField("server", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>data.ban.reason</code>.
	 */
	public final TableField<BanRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>data.ban.heuristic</code>.
	 */
	public final TableField<BanRecord, Byte> HEURISTIC = createField("heuristic", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>data.ban.expire_time</code>.
	 */
	public final TableField<BanRecord, Timestamp> EXPIRE_TIME = createField("expire_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>data.ban.pardon_by</code>.
	 */
	public final TableField<BanRecord, Integer> PARDON_BY = createField("pardon_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>data.ban.pardon_reason</code>.
	 */
	public final TableField<BanRecord, String> PARDON_REASON = createField("pardon_reason", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>data.ban</code> table reference
	 */
	public Ban() {
		this("ban", null);
	}

	/**
	 * Create an aliased <code>data.ban</code> table reference
	 */
	public Ban(String alias) {
		this(alias, BAN);
	}

	private Ban(String alias, Table<BanRecord> aliased) {
		this(alias, aliased, null);
	}

	private Ban(String alias, Table<BanRecord> aliased, Field<?>[] parameters) {
		super(alias, Data.DATA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<BanRecord, Integer> getIdentity() {
		return Keys.IDENTITY_BAN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BanRecord> getPrimaryKey() {
		return Keys.KEY_BAN_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BanRecord>> getKeys() {
		return Arrays.<UniqueKey<BanRecord>>asList(Keys.KEY_BAN_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<BanRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<BanRecord, ?>>asList(Keys.FK_BAN_USER_ID, Keys.FK_BAN_ISSUE_BY, Keys.FK_BAN_PARDON_BY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ban as(String alias) {
		return new Ban(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Ban rename(String name) {
		return new Ban(name, null);
	}
}
