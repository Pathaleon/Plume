/**
 * This class is generated by jOOQ
 */
package com.skcraft.plume.common.service.sql.model.data.tables;


import com.skcraft.plume.common.service.sql.model.data.Data;
import com.skcraft.plume.common.service.sql.model.data.Keys;
import com.skcraft.plume.common.service.sql.model.data.tables.records.PartyMemberRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartyMember extends TableImpl<PartyMemberRecord> {

	private static final long serialVersionUID = 1041242350;

	/**
	 * The reference instance of <code>data.party_member</code>
	 */
	public static final PartyMember PARTY_MEMBER = new PartyMember();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PartyMemberRecord> getRecordType() {
		return PartyMemberRecord.class;
	}

	/**
	 * The column <code>data.party_member.party_name</code>.
	 */
	public final TableField<PartyMemberRecord, String> PARTY_NAME = createField("party_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>data.party_member.user_id</code>.
	 */
	public final TableField<PartyMemberRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>data.party_member.rank</code>.
	 */
	public final TableField<PartyMemberRecord, String> RANK = createField("rank", org.jooq.impl.SQLDataType.VARCHAR.length(15).nullable(false), this, "");

	/**
	 * Create a <code>data.party_member</code> table reference
	 */
	public PartyMember() {
		this("party_member", null);
	}

	/**
	 * Create an aliased <code>data.party_member</code> table reference
	 */
	public PartyMember(String alias) {
		this(alias, PARTY_MEMBER);
	}

	private PartyMember(String alias, Table<PartyMemberRecord> aliased) {
		this(alias, aliased, null);
	}

	private PartyMember(String alias, Table<PartyMemberRecord> aliased, Field<?>[] parameters) {
		super(alias, Data.DATA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PartyMemberRecord> getPrimaryKey() {
		return Keys.KEY_PARTY_MEMBER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PartyMemberRecord>> getKeys() {
		return Arrays.<UniqueKey<PartyMemberRecord>>asList(Keys.KEY_PARTY_MEMBER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PartyMemberRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PartyMemberRecord, ?>>asList(Keys.FK_PARTY_MEMBER_PARTY_NAME, Keys.FK_PARTY_MEMBER_USER_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PartyMember as(String alias) {
		return new PartyMember(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PartyMember rename(String name) {
		return new PartyMember(name, null);
	}
}
