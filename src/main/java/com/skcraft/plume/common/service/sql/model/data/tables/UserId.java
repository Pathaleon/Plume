/**
 * This class is generated by jOOQ
 */
package com.skcraft.plume.common.service.sql.model.data.tables;


import com.skcraft.plume.common.service.sql.model.data.Data;
import com.skcraft.plume.common.service.sql.model.data.Keys;
import com.skcraft.plume.common.service.sql.model.data.tables.records.UserIdRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserId extends TableImpl<UserIdRecord> {

	private static final long serialVersionUID = 439288328;

	/**
	 * The reference instance of <code>data.user_id</code>
	 */
	public static final UserId USER_ID = new UserId();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserIdRecord> getRecordType() {
		return UserIdRecord.class;
	}

	/**
	 * The column <code>data.user_id.id</code>.
	 */
	public final TableField<UserIdRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>data.user_id.uuid</code>.
	 */
	public final TableField<UserIdRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>data.user_id.name</code>.
	 */
	public final TableField<UserIdRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * Create a <code>data.user_id</code> table reference
	 */
	public UserId() {
		this("user_id", null);
	}

	/**
	 * Create an aliased <code>data.user_id</code> table reference
	 */
	public UserId(String alias) {
		this(alias, USER_ID);
	}

	private UserId(String alias, Table<UserIdRecord> aliased) {
		this(alias, aliased, null);
	}

	private UserId(String alias, Table<UserIdRecord> aliased, Field<?>[] parameters) {
		super(alias, Data.DATA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UserIdRecord, Integer> getIdentity() {
		return Keys.IDENTITY_USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserIdRecord> getPrimaryKey() {
		return Keys.KEY_USER_ID_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserIdRecord>> getKeys() {
		return Arrays.<UniqueKey<UserIdRecord>>asList(Keys.KEY_USER_ID_PRIMARY, Keys.KEY_USER_ID_UUID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserId as(String alias) {
		return new UserId(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UserId rename(String name) {
		return new UserId(name, null);
	}
}
