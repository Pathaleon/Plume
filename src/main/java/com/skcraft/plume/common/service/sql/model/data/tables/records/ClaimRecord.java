/**
 * This class is generated by jOOQ
 */
package com.skcraft.plume.common.service.sql.model.data.tables.records;


import com.skcraft.plume.common.service.sql.model.data.tables.Claim;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClaimRecord extends UpdatableRecordImpl<ClaimRecord> implements Record7<String, String, Integer, Integer, Integer, String, Timestamp> {

	private static final long serialVersionUID = 1655588272;

	/**
	 * Setter for <code>data.claim.server</code>.
	 */
	public void setServer(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>data.claim.server</code>.
	 */
	public String getServer() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>data.claim.world</code>.
	 */
	public void setWorld(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>data.claim.world</code>.
	 */
	public String getWorld() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>data.claim.x</code>.
	 */
	public void setX(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>data.claim.x</code>.
	 */
	public Integer getX() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>data.claim.z</code>.
	 */
	public void setZ(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>data.claim.z</code>.
	 */
	public Integer getZ() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>data.claim.owner_id</code>.
	 */
	public void setOwnerId(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>data.claim.owner_id</code>.
	 */
	public Integer getOwnerId() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>data.claim.party_name</code>.
	 */
	public void setPartyName(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>data.claim.party_name</code>.
	 */
	public String getPartyName() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>data.claim.issue_time</code>.
	 */
	public void setIssueTime(Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>data.claim.issue_time</code>.
	 */
	public Timestamp getIssueTime() {
		return (Timestamp) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record4<String, String, Integer, Integer> key() {
		return (Record4) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<String, String, Integer, Integer, Integer, String, Timestamp> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<String, String, Integer, Integer, Integer, String, Timestamp> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Claim.CLAIM.SERVER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Claim.CLAIM.WORLD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Claim.CLAIM.X;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Claim.CLAIM.Z;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Claim.CLAIM.OWNER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Claim.CLAIM.PARTY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field7() {
		return Claim.CLAIM.ISSUE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getServer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getWorld();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getX();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getZ();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getOwnerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getPartyName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value7() {
		return getIssueTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClaimRecord value1(String value) {
		setServer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClaimRecord value2(String value) {
		setWorld(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClaimRecord value3(Integer value) {
		setX(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClaimRecord value4(Integer value) {
		setZ(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClaimRecord value5(Integer value) {
		setOwnerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClaimRecord value6(String value) {
		setPartyName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClaimRecord value7(Timestamp value) {
		setIssueTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ClaimRecord values(String value1, String value2, Integer value3, Integer value4, Integer value5, String value6, Timestamp value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ClaimRecord
	 */
	public ClaimRecord() {
		super(Claim.CLAIM);
	}

	/**
	 * Create a detached, initialised ClaimRecord
	 */
	public ClaimRecord(String server, String world, Integer x, Integer z, Integer ownerId, String partyName, Timestamp issueTime) {
		super(Claim.CLAIM);

		setValue(0, server);
		setValue(1, world);
		setValue(2, x);
		setValue(3, z);
		setValue(4, ownerId);
		setValue(5, partyName);
		setValue(6, issueTime);
	}
}
