/**
 * This class is generated by jOOQ
 */
package com.skcraft.plume.common.service.sql.model.log.tables;


import com.skcraft.plume.common.service.sql.model.log.Keys;
import com.skcraft.plume.common.service.sql.model.log.Log;
import com.skcraft.plume.common.service.sql.model.log.tables.records.LogWorldRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogWorld extends TableImpl<LogWorldRecord> {

	private static final long serialVersionUID = 1532805832;

	/**
	 * The reference instance of <code>log.log_world</code>
	 */
	public static final LogWorld LOG_WORLD = new LogWorld();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<LogWorldRecord> getRecordType() {
		return LogWorldRecord.class;
	}

	/**
	 * The column <code>log.log_world.id</code>.
	 */
	public final TableField<LogWorldRecord, Short> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>log.log_world.name</code>.
	 */
	public final TableField<LogWorldRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * Create a <code>log.log_world</code> table reference
	 */
	public LogWorld() {
		this("log_world", null);
	}

	/**
	 * Create an aliased <code>log.log_world</code> table reference
	 */
	public LogWorld(String alias) {
		this(alias, LOG_WORLD);
	}

	private LogWorld(String alias, Table<LogWorldRecord> aliased) {
		this(alias, aliased, null);
	}

	private LogWorld(String alias, Table<LogWorldRecord> aliased, Field<?>[] parameters) {
		super(alias, Log.LOG, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<LogWorldRecord, Short> getIdentity() {
		return Keys.IDENTITY_LOG_WORLD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<LogWorldRecord> getPrimaryKey() {
		return Keys.KEY_LOG_WORLD_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<LogWorldRecord>> getKeys() {
		return Arrays.<UniqueKey<LogWorldRecord>>asList(Keys.KEY_LOG_WORLD_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogWorld as(String alias) {
		return new LogWorld(alias, this);
	}

	/**
	 * Rename this table
	 */
	public LogWorld rename(String name) {
		return new LogWorld(name, null);
	}
}
