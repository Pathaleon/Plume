/**
 * This class is generated by jOOQ
 */
package com.skcraft.plume.common.service.sql.model.data.tables;


import com.skcraft.plume.common.service.sql.model.data.Data;
import com.skcraft.plume.common.service.sql.model.data.Keys;
import com.skcraft.plume.common.service.sql.model.data.tables.records.UserGroupRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserGroup extends TableImpl<UserGroupRecord> {

	private static final long serialVersionUID = -955813569;

	/**
	 * The reference instance of <code>data.user_group</code>
	 */
	public static final UserGroup USER_GROUP = new UserGroup();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserGroupRecord> getRecordType() {
		return UserGroupRecord.class;
	}

	/**
	 * The column <code>data.user_group.user_id</code>.
	 */
	public final TableField<UserGroupRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>data.user_group.group_id</code>.
	 */
	public final TableField<UserGroupRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>data.user_group</code> table reference
	 */
	public UserGroup() {
		this("user_group", null);
	}

	/**
	 * Create an aliased <code>data.user_group</code> table reference
	 */
	public UserGroup(String alias) {
		this(alias, USER_GROUP);
	}

	private UserGroup(String alias, Table<UserGroupRecord> aliased) {
		this(alias, aliased, null);
	}

	private UserGroup(String alias, Table<UserGroupRecord> aliased, Field<?>[] parameters) {
		super(alias, Data.DATA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserGroupRecord> getPrimaryKey() {
		return Keys.KEY_USER_GROUP_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserGroupRecord>> getKeys() {
		return Arrays.<UniqueKey<UserGroupRecord>>asList(Keys.KEY_USER_GROUP_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<UserGroupRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<UserGroupRecord, ?>>asList(Keys.FK_USER_GROUP_USER_ID, Keys.FK_USER_GROUP_GROUP_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserGroup as(String alias) {
		return new UserGroup(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UserGroup rename(String name) {
		return new UserGroup(name, null);
	}
}
